<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABgFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABcaSURBVHja7Z0JjF1XeYCPx7E9E9uJx/bYM+/de9Z735vFW+I4CSGpAgEaEQhbCSRx
        EwhLSAqoAVMKVKGoATW0QAuCFtqAaAtCbSgqIBBtoRUtqGxlKWUtWxMIAUrYwhIg9P/ve26ryn53vMyb
        t3yf+DUWjPFdzv3uf8495z/GwFhw9tatJvhgytyeXlj/tGT9J5PzP07Ofa5w/tlF5rf52DDTZ6/lYgGM
        GoV3pvRuvTz0hyS+J/GL/xN3ixRe0MrixjIL5kIuF8CICcA6E70v5GH/4v97+A/Hf8rvnB1CMvfncgGM
        FiGbNZLuP7CT9h9RAL+QbsGvuPnctBqRCwYwSiSXrxEBPEwe9B8dTQCF8wfNfc8zLckWAGDsBOB+1dz3
        chGA5YIBjKUAznsMAgBAAACAAAAAAQAAAgAABAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAAgAABAA
        ACAAgN6EEKqQBmqS98RxRdCagA+pEcDlPkSu1fGE8532GaPZds01PLQn563lTJQIcoFFAFNygc+Ri32Z
        xJXEMcdBaaQvlbjnqEVBnf8jrtNxhvOPkfZ5vghgY8yDiTaagkzqhNNWEYBXCVi5wC+X+KzEnRLfIo4r
        dD+Ae3sI4Ptco+OOb0h8XuIWefhbwRbSlWryEJ+YAKrUarPE70v8vEfDJYhBitfJ23+6oLry8bN//355
        +LXfGvbJBf0yjYoYorg9Wf/LEjzIJyKAaKtBvwt5+xNDFjrOcrVmsHACAvBZbgofLqJBEUMW+sK6BgEg
        AAIBwAoL4Ce6uy1B9Dl+0uOLCgLokwB+JnFrcu6QxDMJok/xDIk39JhUhQD6JIB7kg1PTrFZTRoiiH5F
        9P5yaX/fQQCrL4DrUh7Xyk8uGvQFefg1DiIABAAIAAEgAEAACAABAAJAAAgAEAACQACAALhYCAAQACAA
        QACwcgIo82gIoh8RgkMAAyKAn0q8qrDhYRIPJYg+xUMK51/SXROAAFZRABo/lPguQfQxvtNtdywGGgAB
        EATLgREAQSAABEAQCAABEAQCQAAEgQAQAEEggFEUgJYEe2N0/jqJpxBEn+JaaXev7X4KRACrOhPQhWuf
        fs4es+gTQfQl5n3UmYBXMBNwcKYCT1hrDUH0IwJrAQZvLQCLgaBfsBgIAQACQAAIABAAAkAAgAAQAAIA
        BIAAEAAgAASAAAABIAAEAAgAEAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAIABAAIAAEgAEAACAAB
        AAJAAAgAEAACQACAABAAAgAEgAAQACAABIAAAAEgAAAEgAAAEAACAEAACAAAASAAAASAAAAQAAIAQAAI
        AAABIAAABIAAABAAAgBAAAgAAAEgAAAEgAAAEAACAASAABAAIAAEgAAAASAABAAIAAEgAEAACAABAAJA
        AAgAEAAXCwEAAgAEAAgAEAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAJAAAgAEAACQACAABAAAgAE
        gAAQACAABIAAAAEgAAQACAABIABAAAgAAAEgAAAEgAAAEAACAEAACAAAASAAAASAAAAQAAIAQAAIAAAB
        IAAABIAAABAAAgBAAAgAAAEgAAAEgAAAASAABAAIAAEgAEAACAABAAJAAAgAEAACQACAABAAAgAEAAgA
        EAAgAEAAgAAAAQACAAQACAAQACAAQACAAAABAAIABIAAEAAgAASAAAABIAAEAAgAASAAQAAIAAEAAkAA
        CAAQAAJAAIAAEAACAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEgAAAEgAAAEAACAEAACAAA
        ASAAAASAAAAQAAIAQAAIABAAAkAAgAAQAAIABIAAEAAgAASAAAABIAAEAAgAAfRLAE8psmJNtHJTCKIf
        4SoBXIkABkEAzh+SmzIjsY0g+hRbRQBPkbb3XQSwugLQC/0BiTdI/AVB9DHe130BIYBVFABBDGIgAARA
        IAAEcNzs27fPhNwiAAIBjCMbNmyQh19HXN0FciF/TKMihih+mKy/QoIH+URQg0q0JD5IoyKGKD4pcYAM
        4EQnXOTBxCycIiZ9olzMO2lYxBCEzg04FJxdL9krD/GJ0AqFKVwwIbNT0flHJef+Wi7upyS+OETxvZoG
        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
        TkSuQmCC
</value>
  </data>
</root>